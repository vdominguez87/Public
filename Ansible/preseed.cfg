#_preseed_V1
#### Contents of the preconfiguration file (for bookworm)
### Localization
# Preseeding only locale sets language, country and locale.
d-i debian-installer/language string en
d-i debian-installer/country string US
d-i debian-installer/locale string en_US.UTF-8

# Keyboard selection.
d-i keyboard-configuration/xkb-keymap select us

# Automatic network configuration is the default.
# If you prefer to configure the network manually, uncomment this line and
# the static network configuration below.
d-i netcfg/disable_autoconfig boolean true

# If you want the preconfiguration file to work on systems both with and
# without a dhcp server, uncomment these lines and the static network
# configuration below.
d-i netcfg/dhcp_failed note
d-i netcfg/dhcp_options select Configure network manually

# Static network configuration.
#
# IPv4 example
d-i netcfg/get_ipaddress string 192.168.x.x
d-i netcfg/get_netmask string 255.255.255.0
d-i netcfg/get_gateway string 192.168.x.x
d-i netcfg/get_nameservers string 192.168.x.x
d-i netcfg/confirm_static boolean true

# If you want to force a hostname, regardless of what either the DHCP
# server returns or what the reverse DNS entry for the IP is, uncomment
# and adjust the following line.
d-i netcfg/hostname string TestVM2

### Mirror settings
# Mirror protocol:
# If you select ftp, the mirror/country string does not need to be set.
# Default value for the mirror protocol: http.
#d-i mirror/protocol string ftp
d-i mirror/country string manual
d-i mirror/http/hostname string http.us.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string

# Root password, either in clear text
#d-i passwd/root-password password r00tme
#d-i passwd/root-password-again password r00tme
# or encrypted using a crypt(3)  hash.
d-i passwd/root-password-crypted password "ENCRYTPEDPASSWORD"

# To create a normal user account.
d-i passwd/user-fullname string Victor Dominguez
d-i passwd/username string docker_ct
# Normal user's password, either in clear text
#d-i passwd/user-password password insecure
#d-i passwd/user-password-again password insecure
# or encrypted using a crypt(3) hash.
d-i passwd/user-password-crypted password "ENCRYTPEDPASSWORD"
# Create the first user with the specified UID instead of the default.
#d-i passwd/user-uid string 1010

### Clock and time zone setup
# Controls whether or not the hardware clock is set to UTC.
d-i clock-setup/utc boolean true

# You may set this to any valid setting for $TZ; see the contents of
# /usr/share/zoneinfo/ for valid values.
d-i time/zone string US/Pacific

# Controls whether to use NTP to set the clock during the install
d-i clock-setup/ntp boolean true

# Alternatively, you may specify a disk to partition. If the system has only
# one disk the installer will default to using that, but otherwise the device
# name must be given in traditional, non-devfs format (so e.g. /dev/sda
# and not e.g. /dev/discs/disc0/disc).
# For example, to use the first SCSI/SATA hard disk:
d-i partman-auto/disk string /dev/sda
# In addition, you'll need to specify the method to use.
# The presently available methods are:
# - regular: use the usual partition types for your architecture
# - lvm:     use LVM to partition the disk
# - crypto:  use LVM within an encrypted partition
d-i partman-auto/method string lvm

# You can define the amount of space that will be used for the LVM volume
# group. It can either be a size with its unit (eg. 20 GB), a percentage of
# free space or the 'max' keyword.
d-i partman-auto-lvm/guided_size string max

# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
d-i partman-lvm/device_remove_lvm boolean true
# The same applies to pre-existing software RAID array:
d-i partman-md/device_remove_md boolean true
# And the same goes for the confirmation to write the lvm partitions.
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

# You can choose one of the three predefined partitioning recipes:
# - atomic: all files in one partition
# - home:   separate /home partition
# - multi:  separate /home, /var, and /tmp partitions
d-i partman-auto/choose_recipe select atomic

# This makes partman automatically partition without confirmation, provided
# that you told it what to do using one of the methods above.
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

## Controlling how partitions are mounted
# The default is to mount by UUID, but you can also choose "traditional" to
# use traditional device names, or "label" to try filesystem labels before
# falling back to UUIDs.
d-i partman/mount_style select uuid

# Additional repositories, local0 
d-i apt-setup/local0/repository string https://developer.download.nvidia.com/compute/cuda/repos/debian12/x86_64 /
d-i apt-setup/local0/key string https://developer.download.nvidia.com/compute/cuda/repos/debian12/x86_64/3bf863cc.pub

# Additional repositories, local1
d-i apt-setup/local1/repository string https://deb.debian.org/debian bookworm main contrib non-free

# Additional repositories, local2
d-i apt-setup/local2/repository string https://nvidia.github.io/libnvidia-container/stable/debian10/amd64 /
d-i apt-setup/local2/key string https://nvidia.github.io/libnvidia-container/gpgkey

# Additional repositories, local3
d-i apt-setup/local3/repository string https://pkg.cloudflare.com/cloudflared bookworm main
d-i apt-setup/local3/key string https://pkg.cloudflare.com/cloudflare-main.gpg

# Additional repositories, local4
d-i apt-setup/local4/repository string https://download.docker.com/linux/debian bookworm stable
d-i apt-setup/local4/key string https://download.docker.com/linux/debian/gpg

### Package selection
tasksel tasksel/first multiselect standard, ssh-server

# Individual additional packages to install
d-i pkgsel/include string apt-transport-https curl dkms fail2ban git iptables ncdu nfs-common rsync sendmail uidmap

# This is fairly safe to set, it makes grub install automatically to the UEFI
# partition/boot record if no other operating system is detected on the machine.
d-i grub-installer/only_debian boolean true

# Due notably to potential USB sticks, the location of the primary drive can
# not be determined safely in general, so this needs to be specified:
d-i grub-installer/bootdev  string /dev/sda
# To install to the primary device (assuming it is not a USB stick):
d-i grub-installer/bootdev  string default

# Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note

# This command is run just before the install finishes, but when there is
# still a usable /target directory. You can chroot to /target and use it
# directly, or use the apt-install and in-target commands to easily install
# packages and run commands in the target system.
d-i preseed/late_command string \
    in-target mkdir -m 777 /Install_Logs; \
    in-target /bin/sh -c 'echo "YXB0LWdldCB1cGRhdGUKYXB0LWdldCBpbnN0YWxsIC15IGNsb3VkZmxhcmVkIGRvY2tlci1jZS1jbGkgZ2l0IG52aWRpYS1jb250YWluZXItdG9vbGtpdCBudnRvcAppbnN0YWxsIC1nIGRvY2tlcl9jdCAtbyBkb2NrZXJfY3QgLWQgL0RvY2tlciAvRG9ja2VyL1NjcmlwdHMKZWNobyAiSVAgQUREUkVTUzovRG93bmxvYWRzIC9Eb3dubG9hZHMgbmZzIG5vYXV0byx4LXN5c3RlbWQuYXV0b21vdW50LF9u
ZXRkZXYgMCAwIiA+PiAvZXRjL2ZzdGFiCmVjaG8gIjAgMCAqICogMCAvRG9ja2VyL1NjcmlwdHMvRG9ja2VyQmFrLnNoIiB8IGNyb250YWIgLQplY2hvICIwIDAgKiAqICogL0RvY2tlci9TY3JpcHRzL0RvY2tlclB1bGwuc2giIHwgY3JvbnRhYiAtdSBkb2NrZXJfY3QgLQplY2hvICJuZXQuaXB2NC5waW5nX2dyb3VwX3JhbmdlID0gMCAxMDAwIiA+PiAvZXRjL3N5c2N0bC5jb25mCmVjaG8gImRvY2tl
cl9jdCBBTEw9KEFMTCkgTk9QQVNTV0Q6IC91c3IvbG9jYWwvYmluL2Nsb3VkZmxhcmVkIC0tY29uZmlnIC9Eb2NrZXIvY2xvdWRmbGFyZWQvY29uZmlnLnltbCBzZXJ2aWNlIGluc3RhbGwsIC91c3IvYmluL21rZGlyIC9ldGMvY2xvdWRmbGFyZWQsIC91c3IvYmluL2NwIC9Eb2NrZXIvY2xvdWRmbGFyZWQvY29uZmlnLnltbCAvZXRjL2Nsb3VkZmxhcmVkL2NvbmZpZy55bWwiID4gL2V0Yy9zdWRvZXJz
LmQvbXlPdmVycmlkZXMKdGVlIC1hIC9ldGMvc3lzY3RsLmNvbmYgPDxFT0YKCiNET0NLRVIgUk9PVExFU1MKbmV0LmlwdjQuaXBfdW5wcml2aWxlZ2VkX3BvcnRfc3RhcnQ9MAprZXJuZWwudW5wcml2aWxlZ2VkX3VzZXJuc19jbG9uZT0xCkVPRgo=" | base64 -d | sh > /Install_Logs/Initial-Setup.log 2>&1'; \
    in-target /bin/sh -c 'echo "dGVlIC1hIC9yb290Ly5zc2gvaWRfcnNhIDw8RU9GCi0tLS0tQkVHSU4gT1BFTlNTSCBQUklWQVRFIEtFWS0tLS0tCmIzQmxibk56YUMxclpYa3RkakVBQUFBQUJHNXZibVVBQUFBRWJtOXVaUUFBQUFBQUFBQUJBQUFBTXdBQUFBZHpjMmd0Y24KTmhBQUFBQXdFQUFRQUFBWUVBM2ZQbjd6MXpVc2NUaXdvc1o2NXVubWZEZ0w2NFhrRThIOEgyNE03eVBmNUk3d2NuekQ4SAo4dzd5TzhLN3BQZ1U4dkp2OG83eUl2UDd6Zno3d0huRDhINHdMNUw3clBoOXpQbjh3N3pLZjVIOEQ4UTdvN3dQNVk3dlAKNEY4SDdmUDh4N29HNXdCN2taNUpmUDN3OFQ4akI4Qjl5TzhENUg4eU84QjhZN3REOUg0eDlUOG5EOHo3cEg3SmZQOG5ECjlQM3c3b0c0dzl6SmZPOG41SjdPOEY4QTduOXZKOEo3TzhCN083SDVKZlA5ZkQ4SDdPOEI3d0g1TDhQNU84RjhCN083RAo4SDdMOVQ4SjdPOEQ4VDhKN084RDdQOEY5SjdQN0Q4VDdMOE84RDdQOEY5SjdPN1A4RDhUN1A4RDhUN1A3RDlQOEQ5UDgKRDdQOEQ4VDhEOVA4RDdQOEQ4VDdQN0Q5UDhEOVA4RDhUOEQ5UDhEN1A4RDlQOEQ4VDdQN0Q5UDhEOFQ4RDlQOEQ3UDhECjlQOEQ4VDdQN0Q4RDlQOEQ5UDhEN1A3RDlQOEQ4VDdQOEQ5UDhEOFQ3UDhEOFQ4RDdQOEQ5UDhEOVA4RDdQOEQ4VDdQOApEOFQ3UDdEOEQ5UDhEOVA4RDdQOEQ4VDdQOEQ5UDhEOFQ3UDhEOFQ3UDhEOVA4RDdQOEQ4VDdQOEQ4VDhEN1A4RDlQOEQKOVA4RDhUN1A4RDlQOEQ4VDdQOEQ5UDhEN1A3RDhEOVA4RDlQOEQ3UDhEOVA4RDhUN1A4RDlQOEQ4VDdQOEQ4VDdQOEQ4ClQ3UDhEOVA4RDlQOEQ3UDhEOFQ3UDhEOVA4RDhUN1A4RDlQOEQ4VDdQOEQ5UDhEN1A3RDhEOVA4RDlQOEQ3UDdEOVA4RAo5UDhEN1A4RDlQOEQ5UDhEOFQ3UDhEOVA4RDlQOEQ3UDhEOVA4RDlQOEQ3UDhEOFQ3UDhEOVA4RDlQOEQ3UDhEOFQ3UDgKRDlQOEQ4VDdQOEQ5UDhEOFQ3UDhEOVA4RDdQN0Q4RDlQOEQ5UDhEN1A4RDlQOEQ4VDdQOEQ5UDhEOFQ3UDhEOFQ3UDhECjhUN1A4RDlQOEQ5UDhEN1A4RDhUN1A4RDlQOEQ4VDdQOEQ5UDhEN1A3RDlQOEQ4VDdQOEQ5UDhEOFQ3UDhEOVA4RDhUNwpQOEQ5UDhEN1A3RDhEOVA4RDlQOEQ3UDhEOVA4RDlQOEQ4VDdQOEQ5UDhEOFQ3UDhEOVA4RDhUN1A4RDlQOEQ3UDdEOVAKOEQ5UDhEN1A4RDlQOEQ5UDhEOFQ3UDhEOVA4RDlQOEQ3UDhEOFQ3UDhEOVA4RDhUN1A4RDlQOEQ4VDdQOEQ5UDhEN1A3CkQ4RDlQOEQ5UDhEN1A3RDlQOEQ5UDhEN1A4RDlQOEQ4VDdQOEQ5UDhEOVA4RDdQOEQ4VDdQOEQ5UDhEOFQ3UDhEOVA4RAo4VDdQOEQ5UDhEOVA4RDdQOEQ4VDdQOEQ5UDhEOVA4RDdQOEQ5UDhEOFQ3UDhEOVA4RDhUN1A4RDlQOEQ3UDdEOVA4RDgKVDdQOEQ5UDhEOFQ3UDhEOVA4RDhUN1A4RDlQOEQ3UDdEOEQ5UDhEOVA4RDdQOEQ5UDhEOVA4RDdQOEQ4VDdQOEQ5UDhECjlQOEQ3UDhEOFQ3UDhEOVA4RDhUN1A4RDlQOEQ4VDdQOEQ5UDhEN1A3RDhEOVA4RDlQOEQ3UDdEOVA4RDlQOEQ3UDhEOQpQOEQ5UDhEOFQ3UDhEOVA4RDlQOEQ3UDhEOVA4RDlQOEQ4VDdQOEQ5UDhEOVA4RDdQOEQ5UDhEOVA4RDdQOEQ5UDhEOVAKOEQ4VDdQOEQ5UDhEOFQ3UDhEOVA4RDlQOEQ3UDhEOVA4RDlQOEQ4VDdQOEQ5UDhEOFQ3UDhEOVA4RDhUN1A4RDlQOEQ3ClA3RDhEOVA4RDlQOEQ3UDdEOVA4RDlQOEQ3UDhEOVA4RDhUN1A4RDlQOEQ4VDdQOEQ5UDhEOFQ3UDhEOVA4RDhUN1A4RAo5UDhEN1A3RDhEOVA4RDlQOEQ3UDhEOVA4RDlQOEQ4VDdQOEQ5UDhEOFQ3UDhEOVA4RDlQOEQ3UDhEOVA4RDhUN1A4RDkKUDhEOVA4RDdQOEQ4VDdQOEQ5UDhEOFQ3UDhEOVA4RDlQOEQ3UDhEOVA4RDlQOEQ3UDhEOFQ3UDhEOVA4RDlQOEQ3UDhECjlQOEQ5UDhEOFQ3UDhEOVA4RDlQOEQ3UDhEOVA4RDlQOEQ3UDhEOVA4RDhUN1A4RDlQOEQ5UDhEN1A4RDlQOEQ5UDhEOApUN1A4RDlQOEQ4VDdQOEQ5UDhEOFQ3UDhEOVA4RDlQOEQ3UDhEOVA4RDhUN1A4RDlQOEQ5UDhEN1A4RDlQOEQ5UDhEOFQKN1A4RDlQOEQ5UDhEN1A4RDlQOEQ5UDhEN1A4RDlQOEQ5UDhEOFQ3UDhEOVA4RDlQOEQ3UDhEOFQ3UDhEOVA4RDlQOEQ3ClA4RDlQOEQ5UDhEOFQ3UDhEOVA4RDhUN1A4RDlQOEQ5UDhEN1A4RDlQOEQ5UDhEOFQ3UDhEOVA4RDlQOEQ3UDhEOVA4RAo4VDdQOEQ5UDhEOVA4RDdQOEQ5UDhEOVA4RDhUN1A4RDkKLS0tLS1FTkQgT1BFTlNTSCBQUklWQVRFIEtFWS0tLS0tCkVPRgp0ZWUgLWEgL3Jvb3QvLnNzaC9rbm93bl9ob3N0cyA8PEVPRgp8MXxBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQT18QkJCQkJCQkJCQkJCQkJCQkJCQkJCQkI9IHNzaC1lZDI1NTE5IEFBQUFDM056YUMxbFpESTFOVEU1QUFBQUlGYWtlS2V5MVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYCnwxfENDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDQ0NDPXxERERERERERERERERERERERERERERERD0gc3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFCZ1FGYWtlS2V5MlhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYCnwxfEVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFPXxGRkZGRkZGRkZGRkZGRkZGRkZGRkZGRj0gZWNkc2Etc2hhMi1uaXN0cDI1NiBBQUFBRTJWalpITmhMWE5v
WVRJdGJtbHpkSEF5TlRZQUFBQUlibWx6ZEhBeU5UWUFBQUJCQkZha2VLZXkzWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYCkVPRgpjaG1vZCA2MDAgL3Jvb3QvLnNzaC9pZF9yc2EgJiYgc3NoIC1UIGdpdEBnaXRodWIuY29tCmdpdCBjbG9uZSBnaXRAZ2l0aHViLmNvbTpVc2VybmFtZS9SZXBvLmdpdCAvRG9ja2VyL1NjcmlwdHMKY2htb2QgK3ggL0RvY2tlci9TY3JpcHRzLyouc2gKY2hvd24gZG9ja2VyX2N0OmRvY2tlcl9jdCAvRG9ja2VyL1NjcmlwdHMvRG9ja2VyUHVsbC5zaCAvRG9ja2VyL1NjcmlwdHMvZG9ja2VyLWNvbXBvc2UueWFtbCAvRG9ja2VyL1NjcmlwdHMvLmVudgptdiAvRG9ja2VyL1NjcmlwdHMvLmVudiAvRG9ja2VyL1NjcmlwdHMvKi55YW1sIC9Eb2NrZXIvU2NyaXB0cy9jbG91ZGZsYXJlZCAvRG9ja2VyLwo=
" | base64 -d | sh > /Install_Logs/GitHub.log 2>&1'; \
    in-target /bin/su - docker_ct -c 'echo "Y3VybCAtZnNTTCBodHRwczovL2dldC5kb2NrZXIuY29tL3Jvb3RsZXNzIHwgdGVlIC9Eb2NrZXIvcm9vdGxlc3Muc2ggJiYgY2htb2QgK3ggL0RvY2tlci9yb290bGVzcy5zaAp0ZWUgLWEgL0RvY2tlci9yb290bGVzcy5zaCA8PEVPRgoKc2xlZXAgNDAgJiYgc2VkIC1pIC1lICcvXm5vaHVwLiomJC9kJyAtZSAnL15kaXNvd24kL2QnIC1lICcvXnNsZWVwLiomJC9kJyAvaG9tZS9kb2NrZXJfY3QvLmJhc2hyYyAmJiBybSAtLSAiXCQwIgpFT0YKdGVlIC1hIC9ob21lL2RvY2tlcl9jdC8uYmFzaHJjIDw8RU9GCgpub2h1cCBzdWRvIGNsb3VkZmxhcmVkIC0tY29uZmlnIC9Eb2NrZXIvY2xvdWRmbGFyZWQvY29uZmlnLnltbCBzZXJ2aWNlIGluc3RhbGwgPiAvSW5zdGFsbF9Mb2dzL0Nsb3VkZmxhcmVkLmxvZyAyPiYxICYKZGlzb3duCm5vaHVwIHN5c3RlbWN0bCBlbmFibGUgY2xvdWRmbGFyZWQgPj4gL0luc3RhbGxfTG9ncy9DbG91ZGZsYXJlZC5sb2cgMj4mMSAmCmRpc293bgpub2h1cCBjbG91ZGZsYXJlZCB0dW5uZWwgLS1jb25maWcgL0RvY2tlci9jbG91ZGZsYXJlZC9jb25maWcueW1sIHJ1biBEb2NrZXIgPj4gL0luc3RhbGxfTG9ncy9DbG91ZGZsYXJlZC5sb2cgMj4mMSAmCmRpc293bgpub2h1cCAvRG9ja2VyL3Jvb3RsZXNzLnNoID4+IC9JbnN0YWxsX0xvZ3MvRG9ja2VyLmxvZyAyPiYxICYKZGlzb3duCmV4cG9ydCBQQVRIPS9ob21lL2RvY2tlcl9jdC9iaW46JFBBVEgKZXhwb3J0IERPQ0tFUl9IT1NUPXVuaXg6Ly8vcnVuL3VzZXIvMTAwMC9kb2NrZXIuc29jawpzbGVlcCAyMCAmJiBub2h1cCBkb2NrZXIgY29tcG9zZSAtZiAvRG9ja2VyL2RvY2tlci1jb21wb3NlLnlhbWwgdXAgLWQgPj4gL0luc3RhbGxfTG9ncy9Eb2NrZXIubG9nIDI+JjEgJgpkaXNvd24KRU9GCg==" | base64 -d | sh > /Install_Logs/Docker.log 2>&1'; \
    in-target /bin/sh -c 'echo "c2VkIC1pICcvZG5sICMgRGVmYXVsdCBNYWlsZXIgc2V0dXAvLCRkJyAvZXRjL21haWwvc2VuZG1haWwubWMKdGVlIC1hIC9ldGMvbWFpbC9zZW5kbWFpbC5tYyA8PEVPRgpkbmwgIyBEZWZhdWx0IE1haWxlciBzZXR1cApGRUFUVVJFKFxgYXV0aGluZm8nLFxgaGFzaCAtbyAvZXRjL21haWwvYXV0aGluZm8vZ21haWwtYXV0aC1pbmZvLmRiJylkbmwKTUFJTEVSX0RFRklOSVRJT05TCk1BSUxFUihcYGxvY2FsJylkbmwKTUFJTEVSKFxgc210cCcpZG5sCmRlZmluZShcYFNNQVJUX0hPU1QnLFxgW3NtdHAuZ21haWwuY29tXScpZG5sCmRlZmluZShcYFJFTEFZX01BSUxFUl9BUkdTJywgXGBUQ1AgXCRoIDU4NycpZG5sCmRlZmluZShcYEVTTVRQX01BSUxFUl9BUkdTJywgXGBUQ1AgXCRoIDU4NycpZG5sCmRlZmluZShcYGNvbmZBVVRIX09QVElPTlMnLCBcYEEgcCcpZG5sClRSVVNUX0FVVEhfTUVDSChcYEVYVEVSTkFMIERJR0VTVC1NRDUgQ1JBTS1NRDUgTE9HSU4gUExBSU4nKWRubApkZWZpbmUoXGBjb25mQVVUSF9NRUNIQU5JU01TJywgXGBFWFRFUk5BTCBHU1NBUEkgRElHRVNULU1ENSBDUkFNLU1ENSBMT0dJTiBQTEFJTicpCmRubApFT0YKbWtkaXIgLW0gNzAwIC9ldGMvbWFpbC9hdXRoaW5mbwplY2hvICdBdXRoSW5mbzogIlU6cm9vdCIgIkk6ZW1haWxAZ21haWwuY29tIiAiUDp4eHh4IHh4eHggeHh4eCB4eHh4IicgPiAvZXRjL21haWwvYXV0aGluZm8vZ21haWwtYXV0aC1pbmZvCm1ha2VtYXAgaGFzaCAvZXRjL21haWwvYXV0aGluZm8vZ21haWwtYXV0aC1pbmZvIDwgL2V0Yy9tYWlsL2F1dGhpbmZvL2dtYWlsLWF1dGgtaW5mbwpybSAvZXRjL21haWwvYXV0aGluZm8vZ21haWwtYXV0aC1pbmZvCmNobW9kIDYwMCAvZXRjL21haWwvYXV0aGluZm8vKgpjaG93biByb290OnNtbXNwIC9ldGMvbWFpbC9hdXRoaW5mby8qCm00IC9ldGMvbWFpbC9zZW5kbWFpbC5tYyA+IC9ldGMvbWFpbC9zZW5kbWFpbC5jZgpzeXN0ZW1jdGwgZW5hYmxlIHNlbmRtYWlsCg==" | base64 -d | sh > /Install_Logs/Sendmail.log 2>&1';
